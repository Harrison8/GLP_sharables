"0","make_map <- function(maps, var,"
"0","                     hover_name, legend_title,"
"0","                     year = """", race = ""total"", sex = ""total"","
"0","                     units = ""Percent"","
"0","                     color_style = ""sequential"", palette = """", reverse_pal = F,"
"0","                     continuous = T, var_bins,"
"0","                     tiles = T,"
"0","                     bold_nh = T,"
"0","                     save_file = """", save_image = """"){"
"0","  "
"0","  if(typeof(maps) != ""list"") {maps <- list(maps)}"
"0",""
"0","  # Get type of maps"
"0","  geographies <- map_chr(maps, df_type)"
"0","  "
"0","  # Filter data frames to relevant "
"0","  filter_fxn <-  function(obj, year, sex, race) {"
"0","    if (""year"" %in% names(obj) & year == """") obj <- obj[obj$year == max(obj$year),]"
"0","    if (""race"" %in% names(obj)) obj <- obj[obj$race == race,]"
"0","    if (""sex"" %in% names(obj))  obj <- obj[obj$sex == sex,]"
"0","    "
"0","    obj"
"0","  }"
"0","  "
"0","  maps %<>% map(~filter_fxn(., year, sex, race))"
"0","  "
"0","  # Bind maps to map objects"
"0","  bind_fxn <- function(obj, geog) {"
"0",""
"0","    if (geog == ""tract"") {"
"0","      map_tract <- glptools:::map_tract"
"0","      map_tract@data %<>% left_join(obj, by = ""tract"")"
"0","      return(map_tract)"
"0","    } else if (geog == ""nh"") {"
"0","      map_nh <- glptools:::map_nh"
"0","      map_nh@data %<>% left_join(obj, by = ""neighborhood"")"
"0","      return(map_nh)"
"0","    } else if (geog == ""muw"") {"
"0","      map_muw <- glptools:::map_muw"
"0","      map_muw@data %<>% left_join(obj, by = ""neighborhood"")"
"0","      return(map_muw)"
"0","    }"
"0","  }"
"0","  "
"0","  maps %<>% map2(geographies, bind_fxn)"
"0",""
"0","  # Rename variable to ""var"""
"0","  maps %<>% map(function(obj) {obj@data$var <- obj@data[[var]]; obj})"
"0",""
"0","  #concatenate second or third line of text for tract labels using units parameter"
"0","  line_1_2_fxn <- function(obj, geog) {"
"0","    if (geog == ""tract"") {"
"0","      obj@data %<>%"
"0","        mutate("
"0","          line1 = paste0(""Tract "", name, "" in the ""),"
"0","          line2 = paste0(neighborhood, "" neighborhood""))"
"0","    } else if (geog %in% c(""nh"", ""muw"")) {"
"0","      obj@data %<>%"
"0","        mutate("
"0","          line1 = paste0(neighborhood, "" neighborhood""))"
"0","    } else if (geog == ""zip"") {"
"0","      obj@data %<>%"
"0","        mutate("
"0","          line1 = paste0(""Zip code "", zip))"
"0","    }"
"0",""
"0","    obj"
"0","  }"
"0",""
"0","  maps %<>% map2(geographies, line_1_2_fxn)"
"0",""
"0","  line3_fxn <- switch(units,"
"0","                      ""Percent"" = function(obj) {obj@data %<>% mutate("
"0","                        line3 = paste0(hover_name, "": "", round(var, 2), ""%"")); obj},"
"0",""
"0","                      ""Dollars"" = function(obj) {obj@data %<>% mutate("
"0","                        line3 = paste0(hover_name, "": $"", prettyNum(signif(var, 3),"
"0","                                                                    big.mark = "","","
"0","                                                                    preserve.width = ""none""))); obj},"
"0",""
"0","                      ""none"" = function(obj) {obj@data %<>% mutate("
"0","                        line3 = paste0(hover_name, "": "", round(var, 2))); obj},"
"0",""
"0","                      function(obj) {obj@data %<>% mutate("
"0","                        line3 = paste(hover_name, "": "", round(var, 2), "" "", units)); obj})"
"0",""
"0","  maps %<>% map(line3_fxn)"
"0",""
"0","  #combine lines of text into full formatted label"
"0","  label_fxn <- function(obj) {"
"0",""
"0","    if(""line2"" %in% names(obj@data)){"
"0","      labels <- sprintf(""%s<br/>%s<br/>%s"","
"0","                        obj@data$line1,"
"0","                        obj@data$line2,"
"0","                        obj@data$line3) %>%"
"0","        lapply(htmltools::HTML)"
"0",""
"0","      labels[[which(obj@data$neighborhood == ""Airport"")]] <-"
"0","        htmltools::HTML(sprintf(""%s<br/>%s<br/>%s"","
"0","                                ""Tract 98"","
"0","                                ""Louisville International Airport"","
"0","                                ""No residents""))"
"0","    } else {"
"0","      labels <- sprintf(""%s<br/>%s"","
"0","                        obj@data$line1,"
"0","                        obj@data$line3) %>%"
"0","        lapply(htmltools::HTML)"
"0",""
"0","      labels[[which(obj@data$neighborhood == ""Airport"")]] <-"
"0","        htmltools::HTML(sprintf(""%s<br/>%s"","
"0","                                ""Louisville International Airport"","
"0","                                ""No residents""))"
"0","    }"
"0","    labels"
"0","  }"
"0",""
"0","  labels <- map(maps, label_fxn)"
"0",""
"0","  #Define palette using color_style parameter"
"0","  if (palette != """") {"
"0","    color_vector <- col_palette"
"0","  } else if (color_style %in% c(""sequential"", ""Sequential"")) {"
"0","    color_vector <- RColorBrewer::brewer.pal(9, ""BuPu"")"
"0","  } else if (color_style %in% c(""divergent"", ""Divergent"")) {"
"0","    color_vector <- RColorBrewer::brewer.pal(11, ""RdYlGn"")"
"0","  }"
"0",""
"0","  if (reverse_pal) pal <- rev(pal)"
"0",""
"0","  var_range <- map(maps, function(obj) range(obj@data$var, na.rm = T)) %>%"
"0","    range()"
"0",""
"0","  if (continuous) {"
"0","    pal <- leaflet::colorNumeric("
"0","      palette = color_vector,"
"0","      domain = var_range)"
"0","  } else {"
"0","    pal <- leaflet::colorBin("
"0","      palette = color_vector,"
"0","      domain = var_range,"
"0","      bins = var_bins)"
"0","  }"
"0",""
"0","  #Create map title using legend_title parameter"
"0","  title_text <- switch(units,"
"0","                       ""Percent"" = paste0(legend_title, "" (%)""),"
"0","                       ""Dollars"" = paste0(legend_title, "" ($)""),"
"0","                       ""none""    = legend_title,"
"0","                       paste0(legend_title, "" ("", units, "" )""))"
"0",""
"0","  #create map"
"0","  geographies %<>% recode(tract = ""Census Tracts"", nh = ""GLP Neighborhoods"","
"0","                          muw = ""United Way Neighborhoods"")"
"0",""
"0","  m <- leaflet()"
"0",""
"0","  for (i in 1:length(maps)) {"
"0","    this_map  <- maps[[i]]"
"0","    this_geog <- geographies[[i]]"
"0","    these_labels <- labels[[i]]"
"0",""
"0","    m <- m %>% addPolygons("
"0","      data = this_map,"
"0","      color = ""#444444"", weight = 1, smoothFactor = 0.5, opacity = 1.0, fillOpacity = 0.5,"
"0","      fillColor = ~pal(var),"
"0","      label = these_labels,"
"0","      labelOptions = labelOptions("
"0","        style = list(""font-weight"" = ""normal"", ""font-family"" = ""Arial"", padding = ""3px 8px""),"
"0","        textsize = ""15px"","
"0","        direction = ""auto""),"
"0","      group = this_geog)"
"0",""
"0","    if (this_geog == ""Census Tracts"" & bold_nh & ""nh"" %in% geographies) {"
"0","      "
"0","      nh_map_id <- match(""nh"", geographies)"
"0","      "
"0","      m <- m %>% addPolygons("
"0","        data = maps[[nh_map_id]],"
"0","        color = ""#444444"", weight = 2, smoothFactor = 0.5, opacity = 1.0, fill = FALSE,"
"0","        group = ""tract"")"
"0","    }"
"0","  }"
"0",""
"0","  m <- m %>%"
"0","    addLegend(pal = pal, values = var_range, opacity = 0.7, title = title_text, position = ""bottomright"") %>%"
"0","    addLayersControl(baseGroups = geographies,"
"0","                     options = layersControlOptions(collapsed = F))"
"0",""
"0","  #m <- m %>%"
"0","  #  hideGroup(""GLP Neighborhoods"") %>%"
"0","  #  showGroup(""United Way Neighborhoods"")"
"0",""
"0","  if (tiles == TRUE) {"
"0","    m %<>% addTiles()"
"0","  } else if (tiles != FALSE) {"
"0","    m %<>% addTiles(urlTemplate = '//{s}.basemaps.cartocdn.com/rastertiles/voyager_nolabels/{z}/{x}/{y}.png')"
"0","  }"
"0",""
"0","  # Fix legend NA value"
"0","  css_fix <- ""div.info.legend.leaflet-control br {clear: both;}"""
"0","  html_fix <- htmltools::tags$style(type = ""text/css"", css_fix)"
"0","  m %<>% htmlwidgets::prependContent(html_fix)"
"0",""
"0","  if (save_file != """") {"
"0","    rgdal::writeOGR(obj = map, dsn = save_file,"
"0","                    layer = map_obj, driver = ""ESRI Shapefile"","
"0","                    overwrite_layer = TRUE)"
"0","  }"
"0","  if (save_image != """") {"
"0","    mapview::mapshot(m, file = save_image %p% "".pdf"", zoom = 0.4)"
"0","  }"
"0",""
"0","  m"
"0","}"
